#+OPTIONS: toc:nil num:nil
#+REVEAL_ROOT: http://cdn.jsdelivr.net/reveal.js/3.0.0/
#+REVEAL_THEME: blood
#+REVEAL_TRANS: concave
#+REVEAL_PLUGINS: (highlight)
#+REVEAL_EXTRA_CSS: http://cdn.jsdelivr.net/reveal.js/3.0.0/lib/css/zenburn.css

* Intro to Clojure
** What Is Clojure? 

  * Create by Rich Hickey
  * Dynamic functional language
  * Dialect of Lisp
  * JVM
  * Concurrent and Multithreaded

** Why Clojure?

  * Immutability
  * Rich data structures
  * Functional
  * Simplicity
  * Expressive
  * Practical

** Functional vs Imperative (OOP)

  * Computationally Equivalent
  * OOP executes complex tasks that modify application state
  * Functional programming achieves the same goal through nested function
    composition. 
  * OOP uses objects as data, mutable variables, methods on objects,
    patterns, inheritance, abstraction, and polymorphism to model the
    world.
  * Functional progamming uses data structures and nested functions.
 
** Functions
An operation that takes a number of parameters (arguments) and returns a result.

#+begin_src clojure
;; Clojure function invocation
()

;; Example sytnax for all Clojure operations
(operator operand-1 operand-2 ... operand-N)

;; In other words
(function-name argument1 argument2 argument3 ...)
#+end_src

** Quick Demo

  * Hello World
  * Simple Math Example
  * Immutability
  * Working with Collections
  * Examples of FP in Ruby and Javascript
